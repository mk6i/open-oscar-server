// Code generated by mockery v2.53.3. DO NOT EDIT.

package http

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockChatRoomDeleter is an autogenerated mock type for the ChatRoomDeleter type
type mockChatRoomDeleter struct {
	mock.Mock
}

type mockChatRoomDeleter_Expecter struct {
	mock *mock.Mock
}

func (_m *mockChatRoomDeleter) EXPECT() *mockChatRoomDeleter_Expecter {
	return &mockChatRoomDeleter_Expecter{mock: &_m.Mock}
}

// DeleteChatRooms provides a mock function with given fields: ctx, exchange, names
func (_m *mockChatRoomDeleter) DeleteChatRooms(ctx context.Context, exchange uint16, names []string) error {
	ret := _m.Called(ctx, exchange, names)

	if len(ret) == 0 {
		panic("no return value specified for DeleteChatRooms")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint16, []string) error); ok {
		r0 = rf(ctx, exchange, names)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockChatRoomDeleter_DeleteChatRooms_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteChatRooms'
type mockChatRoomDeleter_DeleteChatRooms_Call struct {
	*mock.Call
}

// DeleteChatRooms is a helper method to define mock.On call
//   - ctx context.Context
//   - exchange uint16
//   - names []string
func (_e *mockChatRoomDeleter_Expecter) DeleteChatRooms(ctx interface{}, exchange interface{}, names interface{}) *mockChatRoomDeleter_DeleteChatRooms_Call {
	return &mockChatRoomDeleter_DeleteChatRooms_Call{Call: _e.mock.On("DeleteChatRooms", ctx, exchange, names)}
}

func (_c *mockChatRoomDeleter_DeleteChatRooms_Call) Run(run func(ctx context.Context, exchange uint16, names []string)) *mockChatRoomDeleter_DeleteChatRooms_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uint16), args[2].([]string))
	})
	return _c
}

func (_c *mockChatRoomDeleter_DeleteChatRooms_Call) Return(_a0 error) *mockChatRoomDeleter_DeleteChatRooms_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockChatRoomDeleter_DeleteChatRooms_Call) RunAndReturn(run func(context.Context, uint16, []string) error) *mockChatRoomDeleter_DeleteChatRooms_Call {
	_c.Call.Return(run)
	return _c
}

// newMockChatRoomDeleter creates a new instance of mockChatRoomDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockChatRoomDeleter(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockChatRoomDeleter {
	mock := &mockChatRoomDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
